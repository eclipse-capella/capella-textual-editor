/*
 * generated by Xtext 2.18.0.M3
 */
package org.polarsys.capella.scenario.editor.dslscenario.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.polarsys.capella.scenario.editor.dslscenario.Dsl.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cScenarioKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cBeginAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cBeginLeftCurlyBracketKeyword_1_0 = (Keyword)cBeginAssignment_1.eContents().get(0);
		private final Assignment cParticipantsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cParticipantsParticipantParserRuleCall_2_0 = (RuleCall)cParticipantsAssignment_2.eContents().get(0);
		private final Assignment cMessagesOrReferencesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cMessagesOrReferencesAlternatives_3_0 = (Alternatives)cMessagesOrReferencesAssignment_3.eContents().get(0);
		private final RuleCall cMessagesOrReferencesMessageParserRuleCall_3_0_0 = (RuleCall)cMessagesOrReferencesAlternatives_3_0.eContents().get(0);
		private final RuleCall cMessagesOrReferencesReferenceParserRuleCall_3_0_1 = (RuleCall)cMessagesOrReferencesAlternatives_3_0.eContents().get(1);
		private final Assignment cEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cEndRightCurlyBracketKeyword_4_0 = (Keyword)cEndAssignment_4.eContents().get(0);
		
		//Model:
		//	'scenario' begin='{' participants+=Participant*
		//	messagesOrReferences+=(Message | Reference)*
		//	end='}';
		@Override public ParserRule getRule() { return rule; }
		
		//'scenario' begin='{' participants+=Participant* messagesOrReferences+=(Message | Reference)* end='}'
		public Group getGroup() { return cGroup; }
		
		//'scenario'
		public Keyword getScenarioKeyword_0() { return cScenarioKeyword_0; }
		
		//begin='{'
		public Assignment getBeginAssignment_1() { return cBeginAssignment_1; }
		
		//'{'
		public Keyword getBeginLeftCurlyBracketKeyword_1_0() { return cBeginLeftCurlyBracketKeyword_1_0; }
		
		//participants+=Participant*
		public Assignment getParticipantsAssignment_2() { return cParticipantsAssignment_2; }
		
		//Participant
		public RuleCall getParticipantsParticipantParserRuleCall_2_0() { return cParticipantsParticipantParserRuleCall_2_0; }
		
		//messagesOrReferences+=(Message | Reference)*
		public Assignment getMessagesOrReferencesAssignment_3() { return cMessagesOrReferencesAssignment_3; }
		
		//(Message | Reference)
		public Alternatives getMessagesOrReferencesAlternatives_3_0() { return cMessagesOrReferencesAlternatives_3_0; }
		
		//Message
		public RuleCall getMessagesOrReferencesMessageParserRuleCall_3_0_0() { return cMessagesOrReferencesMessageParserRuleCall_3_0_0; }
		
		//Reference
		public RuleCall getMessagesOrReferencesReferenceParserRuleCall_3_0_1() { return cMessagesOrReferencesReferenceParserRuleCall_3_0_1; }
		
		//end='}'
		public Assignment getEndAssignment_4() { return cEndAssignment_4; }
		
		//'}'
		public Keyword getEndRightCurlyBracketKeyword_4_0() { return cEndRightCurlyBracketKeyword_4_0; }
	}
	public class ParticipantElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.polarsys.capella.scenario.editor.dslscenario.Dsl.Participant");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGenericComponentParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGenericFunctionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Participant:
		//	GenericComponent | GenericFunction;
		@Override public ParserRule getRule() { return rule; }
		
		//GenericComponent | GenericFunction
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GenericComponent
		public RuleCall getGenericComponentParserRuleCall_0() { return cGenericComponentParserRuleCall_0; }
		
		//GenericFunction
		public RuleCall getGenericFunctionParserRuleCall_1() { return cGenericFunctionParserRuleCall_1; }
	}
	public class GenericComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.polarsys.capella.scenario.editor.dslscenario.Dsl.GenericComponent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEntityParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cActorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cComponentParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cConfigurationItemParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cRoleParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//GenericComponent:
		//	Entity | Actor | Component | ConfigurationItem | Role;
		@Override public ParserRule getRule() { return rule; }
		
		//Entity | Actor | Component | ConfigurationItem | Role
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Entity
		public RuleCall getEntityParserRuleCall_0() { return cEntityParserRuleCall_0; }
		
		//Actor
		public RuleCall getActorParserRuleCall_1() { return cActorParserRuleCall_1; }
		
		//Component
		public RuleCall getComponentParserRuleCall_2() { return cComponentParserRuleCall_2; }
		
		//ConfigurationItem
		public RuleCall getConfigurationItemParserRuleCall_3() { return cConfigurationItemParserRuleCall_3; }
		
		//Role
		public RuleCall getRoleParserRuleCall_4() { return cRoleParserRuleCall_4; }
	}
	public class GenericFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.polarsys.capella.scenario.editor.dslscenario.Dsl.GenericFunction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFunctionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cActivityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//GenericFunction:
		//	Function | Activity;
		@Override public ParserRule getRule() { return rule; }
		
		//Function | Activity
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Function
		public RuleCall getFunctionParserRuleCall_0() { return cFunctionParserRuleCall_0; }
		
		//Activity
		public RuleCall getActivityParserRuleCall_1() { return cActivityParserRuleCall_1; }
	}
	public class ActorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.polarsys.capella.scenario.editor.dslscenario.Dsl.Actor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeywordAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cKeywordActorKeyword_0_0 = (Keyword)cKeywordAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Actor:
		//	keyword='actor' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//keyword='actor' name=STRING
		public Group getGroup() { return cGroup; }
		
		//keyword='actor'
		public Assignment getKeywordAssignment_0() { return cKeywordAssignment_0; }
		
		//'actor'
		public Keyword getKeywordActorKeyword_0_0() { return cKeywordActorKeyword_0_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
	}
	public class ComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.polarsys.capella.scenario.editor.dslscenario.Dsl.Component");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeywordAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cKeywordComponentKeyword_0_0 = (Keyword)cKeywordAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cNatureAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cNatureAlternatives_2_0 = (Alternatives)cNatureAssignment_2.eContents().get(0);
		private final Keyword cNatureUnsetKeyword_2_0_0 = (Keyword)cNatureAlternatives_2_0.eContents().get(0);
		private final Keyword cNatureBehaviorKeyword_2_0_1 = (Keyword)cNatureAlternatives_2_0.eContents().get(1);
		private final Keyword cNatureNodeKeyword_2_0_2 = (Keyword)cNatureAlternatives_2_0.eContents().get(2);
		
		//Component:
		//	keyword='component' name=STRING nature=('unset' | 'behavior' | 'node')?;
		@Override public ParserRule getRule() { return rule; }
		
		//keyword='component' name=STRING nature=('unset' | 'behavior' | 'node')?
		public Group getGroup() { return cGroup; }
		
		//keyword='component'
		public Assignment getKeywordAssignment_0() { return cKeywordAssignment_0; }
		
		//'component'
		public Keyword getKeywordComponentKeyword_0_0() { return cKeywordComponentKeyword_0_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//nature=('unset' | 'behavior' | 'node')?
		public Assignment getNatureAssignment_2() { return cNatureAssignment_2; }
		
		//('unset' | 'behavior' | 'node')
		public Alternatives getNatureAlternatives_2_0() { return cNatureAlternatives_2_0; }
		
		//'unset'
		public Keyword getNatureUnsetKeyword_2_0_0() { return cNatureUnsetKeyword_2_0_0; }
		
		//'behavior'
		public Keyword getNatureBehaviorKeyword_2_0_1() { return cNatureBehaviorKeyword_2_0_1; }
		
		//'node'
		public Keyword getNatureNodeKeyword_2_0_2() { return cNatureNodeKeyword_2_0_2; }
	}
	public class ConfigurationItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.polarsys.capella.scenario.editor.dslscenario.Dsl.ConfigurationItem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeywordAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cKeywordConfiguration_itemKeyword_0_0 = (Keyword)cKeywordAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//ConfigurationItem:
		//	keyword='configuration_item' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//keyword='configuration_item' name=STRING
		public Group getGroup() { return cGroup; }
		
		//keyword='configuration_item'
		public Assignment getKeywordAssignment_0() { return cKeywordAssignment_0; }
		
		//'configuration_item'
		public Keyword getKeywordConfiguration_itemKeyword_0_0() { return cKeywordConfiguration_itemKeyword_0_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
	}
	public class FunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.polarsys.capella.scenario.editor.dslscenario.Dsl.Function");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeywordAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cKeywordFunctionKeyword_0_0 = (Keyword)cKeywordAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Function:
		//	keyword='function' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//keyword='function' name=STRING
		public Group getGroup() { return cGroup; }
		
		//keyword='function'
		public Assignment getKeywordAssignment_0() { return cKeywordAssignment_0; }
		
		//'function'
		public Keyword getKeywordFunctionKeyword_0_0() { return cKeywordFunctionKeyword_0_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
	}
	public class ActivityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.polarsys.capella.scenario.editor.dslscenario.Dsl.Activity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeywordAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cKeywordActivityKeyword_0_0 = (Keyword)cKeywordAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Activity:
		//	keyword='activity' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//keyword='activity' name=STRING
		public Group getGroup() { return cGroup; }
		
		//keyword='activity'
		public Assignment getKeywordAssignment_0() { return cKeywordAssignment_0; }
		
		//'activity'
		public Keyword getKeywordActivityKeyword_0_0() { return cKeywordActivityKeyword_0_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
	}
	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.polarsys.capella.scenario.editor.dslscenario.Dsl.Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeywordAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cKeywordEntityKeyword_0_0 = (Keyword)cKeywordAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Entity:
		//	keyword='entity' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//keyword='entity' name=STRING
		public Group getGroup() { return cGroup; }
		
		//keyword='entity'
		public Assignment getKeywordAssignment_0() { return cKeywordAssignment_0; }
		
		//'entity'
		public Keyword getKeywordEntityKeyword_0_0() { return cKeywordEntityKeyword_0_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
	}
	public class RoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.polarsys.capella.scenario.editor.dslscenario.Dsl.Role");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeywordAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cKeywordRoleKeyword_0_0 = (Keyword)cKeywordAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Role:
		//	keyword='role' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//keyword='role' name=STRING
		public Group getGroup() { return cGroup; }
		
		//keyword='role'
		public Assignment getKeywordAssignment_0() { return cKeywordAssignment_0; }
		
		//'role'
		public Keyword getKeywordRoleKeyword_0_0() { return cKeywordRoleKeyword_0_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
	}
	public class MessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.polarsys.capella.scenario.editor.dslscenario.Dsl.Message");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSequenceMessageTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cArmTimerMessageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cParticipantDeactivationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Message:
		//	SequenceMessageType | ArmTimerMessage | ParticipantDeactivation;
		@Override public ParserRule getRule() { return rule; }
		
		//SequenceMessageType | ArmTimerMessage | ParticipantDeactivation
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SequenceMessageType
		public RuleCall getSequenceMessageTypeParserRuleCall_0() { return cSequenceMessageTypeParserRuleCall_0; }
		
		//ArmTimerMessage
		public RuleCall getArmTimerMessageParserRuleCall_1() { return cArmTimerMessageParserRuleCall_1; }
		
		//ParticipantDeactivation
		public RuleCall getParticipantDeactivationParserRuleCall_2() { return cParticipantDeactivationParserRuleCall_2; }
	}
	public class SequenceMessageTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.polarsys.capella.scenario.editor.dslscenario.Dsl.SequenceMessageType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cSequenceMessageParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cCreateMessageParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final RuleCall cDeleteMessageParserRuleCall_0_2 = (RuleCall)cAlternatives_0.eContents().get(2);
		private final Assignment cReturnAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cReturnReturnMessageParserRuleCall_1_0 = (RuleCall)cReturnAssignment_1.eContents().get(0);
		
		//SequenceMessageType:
		//	(SequenceMessage | CreateMessage | DeleteMessage) return=ReturnMessage?;
		@Override public ParserRule getRule() { return rule; }
		
		//(SequenceMessage | CreateMessage | DeleteMessage) return=ReturnMessage?
		public Group getGroup() { return cGroup; }
		
		//SequenceMessage | CreateMessage | DeleteMessage
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//SequenceMessage
		public RuleCall getSequenceMessageParserRuleCall_0_0() { return cSequenceMessageParserRuleCall_0_0; }
		
		//CreateMessage
		public RuleCall getCreateMessageParserRuleCall_0_1() { return cCreateMessageParserRuleCall_0_1; }
		
		//DeleteMessage
		public RuleCall getDeleteMessageParserRuleCall_0_2() { return cDeleteMessageParserRuleCall_0_2; }
		
		//return=ReturnMessage?
		public Assignment getReturnAssignment_1() { return cReturnAssignment_1; }
		
		//ReturnMessage
		public RuleCall getReturnReturnMessageParserRuleCall_1_0() { return cReturnReturnMessageParserRuleCall_1_0; }
	}
	public class SequenceMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.polarsys.capella.scenario.editor.dslscenario.Dsl.SequenceMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSourceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cSourceSTRINGTerminalRuleCall_0_0 = (RuleCall)cSourceAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTargetAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTargetSTRINGTerminalRuleCall_2_0 = (RuleCall)cTargetAssignment_2.eContents().get(0);
		private final Assignment cExecutionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cExecutionWithExecutionKeyword_3_0 = (Keyword)cExecutionAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		
		//SequenceMessage:
		//	source=STRING '->' target=STRING execution='withExecution'? ':' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//source=STRING '->' target=STRING execution='withExecution'? ':' name=STRING
		public Group getGroup() { return cGroup; }
		
		//source=STRING
		public Assignment getSourceAssignment_0() { return cSourceAssignment_0; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_0_0() { return cSourceSTRINGTerminalRuleCall_0_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }
		
		//target=STRING
		public Assignment getTargetAssignment_2() { return cTargetAssignment_2; }
		
		//STRING
		public RuleCall getTargetSTRINGTerminalRuleCall_2_0() { return cTargetSTRINGTerminalRuleCall_2_0; }
		
		//execution='withExecution'?
		public Assignment getExecutionAssignment_3() { return cExecutionAssignment_3; }
		
		//'withExecution'
		public Keyword getExecutionWithExecutionKeyword_3_0() { return cExecutionWithExecutionKeyword_3_0; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//name=STRING
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_5_0() { return cNameSTRINGTerminalRuleCall_5_0; }
	}
	public class CreateMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.polarsys.capella.scenario.editor.dslscenario.Dsl.CreateMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSourceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cSourceSTRINGTerminalRuleCall_0_0 = (RuleCall)cSourceAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignPlusSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTargetAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTargetSTRINGTerminalRuleCall_2_0 = (RuleCall)cTargetAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		
		//CreateMessage:
		//	source=STRING '->+' target=STRING ':' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//source=STRING '->+' target=STRING ':' name=STRING
		public Group getGroup() { return cGroup; }
		
		//source=STRING
		public Assignment getSourceAssignment_0() { return cSourceAssignment_0; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_0_0() { return cSourceSTRINGTerminalRuleCall_0_0; }
		
		//'->+'
		public Keyword getHyphenMinusGreaterThanSignPlusSignKeyword_1() { return cHyphenMinusGreaterThanSignPlusSignKeyword_1; }
		
		//target=STRING
		public Assignment getTargetAssignment_2() { return cTargetAssignment_2; }
		
		//STRING
		public RuleCall getTargetSTRINGTerminalRuleCall_2_0() { return cTargetSTRINGTerminalRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//name=STRING
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_0() { return cNameSTRINGTerminalRuleCall_4_0; }
	}
	public class DeleteMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.polarsys.capella.scenario.editor.dslscenario.Dsl.DeleteMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSourceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cSourceSTRINGTerminalRuleCall_0_0 = (RuleCall)cSourceAssignment_0.eContents().get(0);
		private final Keyword cXKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTargetAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTargetSTRINGTerminalRuleCall_2_0 = (RuleCall)cTargetAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		
		//DeleteMessage:
		//	source=STRING '->x' target=STRING ':' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//source=STRING '->x' target=STRING ':' name=STRING
		public Group getGroup() { return cGroup; }
		
		//source=STRING
		public Assignment getSourceAssignment_0() { return cSourceAssignment_0; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_0_0() { return cSourceSTRINGTerminalRuleCall_0_0; }
		
		//'->x'
		public Keyword getXKeyword_1() { return cXKeyword_1; }
		
		//target=STRING
		public Assignment getTargetAssignment_2() { return cTargetAssignment_2; }
		
		//STRING
		public RuleCall getTargetSTRINGTerminalRuleCall_2_0() { return cTargetSTRINGTerminalRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//name=STRING
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_0() { return cNameSTRINGTerminalRuleCall_4_0; }
	}
	public class ReturnMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.polarsys.capella.scenario.editor.dslscenario.Dsl.ReturnMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTargetAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTargetSTRINGTerminalRuleCall_0_0 = (RuleCall)cTargetAssignment_0.eContents().get(0);
		private final Keyword cLessThanSignHyphenMinusHyphenMinusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSourceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSourceSTRINGTerminalRuleCall_2_0 = (RuleCall)cSourceAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		
		//ReturnMessage:
		//	target=STRING '<--' source=STRING ':' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//target=STRING '<--' source=STRING ':' name=STRING
		public Group getGroup() { return cGroup; }
		
		//target=STRING
		public Assignment getTargetAssignment_0() { return cTargetAssignment_0; }
		
		//STRING
		public RuleCall getTargetSTRINGTerminalRuleCall_0_0() { return cTargetSTRINGTerminalRuleCall_0_0; }
		
		//'<--'
		public Keyword getLessThanSignHyphenMinusHyphenMinusKeyword_1() { return cLessThanSignHyphenMinusHyphenMinusKeyword_1; }
		
		//source=STRING
		public Assignment getSourceAssignment_2() { return cSourceAssignment_2; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_2_0() { return cSourceSTRINGTerminalRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//name=STRING
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_0() { return cNameSTRINGTerminalRuleCall_4_0; }
	}
	public class ArmTimerMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.polarsys.capella.scenario.editor.dslscenario.Dsl.ArmTimerMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignGreaterThanSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cParticipantAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cParticipantSTRINGTerminalRuleCall_1_0 = (RuleCall)cParticipantAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//ArmTimerMessage:
		//	"->>" participant=STRING ':' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//"->>" participant=STRING ':' name=STRING
		public Group getGroup() { return cGroup; }
		
		//"->>"
		public Keyword getHyphenMinusGreaterThanSignGreaterThanSignKeyword_0() { return cHyphenMinusGreaterThanSignGreaterThanSignKeyword_0; }
		
		//participant=STRING
		public Assignment getParticipantAssignment_1() { return cParticipantAssignment_1; }
		
		//STRING
		public RuleCall getParticipantSTRINGTerminalRuleCall_1_0() { return cParticipantSTRINGTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//name=STRING
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_0() { return cNameSTRINGTerminalRuleCall_3_0; }
	}
	public class ParticipantDeactivationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.polarsys.capella.scenario.editor.dslscenario.Dsl.ParticipantDeactivation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeywordAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cKeywordDeactivateKeyword_0_0 = (Keyword)cKeywordAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//ParticipantDeactivation:
		//	keyword='deactivate' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//keyword='deactivate' name=STRING
		public Group getGroup() { return cGroup; }
		
		//keyword='deactivate'
		public Assignment getKeywordAssignment_0() { return cKeywordAssignment_0; }
		
		//'deactivate'
		public Keyword getKeywordDeactivateKeyword_0_0() { return cKeywordDeactivateKeyword_0_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
	}
	public class ReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.polarsys.capella.scenario.editor.dslscenario.Dsl.Reference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeywordAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cKeywordRefKeyword_0_0 = (Keyword)cKeywordAssignment_0.eContents().get(0);
		private final Keyword cOverKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTimelinesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTimelinesSTRINGTerminalRuleCall_2_0 = (RuleCall)cTimelinesAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//Reference:
		//	keyword='ref' 'over' timelines+=STRING+ name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//keyword='ref' 'over' timelines+=STRING+ name=STRING
		public Group getGroup() { return cGroup; }
		
		//keyword='ref'
		public Assignment getKeywordAssignment_0() { return cKeywordAssignment_0; }
		
		//'ref'
		public Keyword getKeywordRefKeyword_0_0() { return cKeywordRefKeyword_0_0; }
		
		//'over'
		public Keyword getOverKeyword_1() { return cOverKeyword_1; }
		
		//timelines+=STRING+
		public Assignment getTimelinesAssignment_2() { return cTimelinesAssignment_2; }
		
		//STRING
		public RuleCall getTimelinesSTRINGTerminalRuleCall_2_0() { return cTimelinesSTRINGTerminalRuleCall_2_0; }
		
		//name=STRING
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_0() { return cNameSTRINGTerminalRuleCall_3_0; }
	}
	
	
	private final ModelElements pModel;
	private final ParticipantElements pParticipant;
	private final GenericComponentElements pGenericComponent;
	private final GenericFunctionElements pGenericFunction;
	private final ActorElements pActor;
	private final ComponentElements pComponent;
	private final ConfigurationItemElements pConfigurationItem;
	private final FunctionElements pFunction;
	private final ActivityElements pActivity;
	private final EntityElements pEntity;
	private final RoleElements pRole;
	private final MessageElements pMessage;
	private final SequenceMessageTypeElements pSequenceMessageType;
	private final SequenceMessageElements pSequenceMessage;
	private final CreateMessageElements pCreateMessage;
	private final DeleteMessageElements pDeleteMessage;
	private final ReturnMessageElements pReturnMessage;
	private final ArmTimerMessageElements pArmTimerMessage;
	private final ParticipantDeactivationElements pParticipantDeactivation;
	private final ReferenceElements pReference;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pParticipant = new ParticipantElements();
		this.pGenericComponent = new GenericComponentElements();
		this.pGenericFunction = new GenericFunctionElements();
		this.pActor = new ActorElements();
		this.pComponent = new ComponentElements();
		this.pConfigurationItem = new ConfigurationItemElements();
		this.pFunction = new FunctionElements();
		this.pActivity = new ActivityElements();
		this.pEntity = new EntityElements();
		this.pRole = new RoleElements();
		this.pMessage = new MessageElements();
		this.pSequenceMessageType = new SequenceMessageTypeElements();
		this.pSequenceMessage = new SequenceMessageElements();
		this.pCreateMessage = new CreateMessageElements();
		this.pDeleteMessage = new DeleteMessageElements();
		this.pReturnMessage = new ReturnMessageElements();
		this.pArmTimerMessage = new ArmTimerMessageElements();
		this.pParticipantDeactivation = new ParticipantDeactivationElements();
		this.pReference = new ReferenceElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.polarsys.capella.scenario.editor.dslscenario.Dsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	'scenario' begin='{' participants+=Participant*
	//	messagesOrReferences+=(Message | Reference)*
	//	end='}';
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Participant:
	//	GenericComponent | GenericFunction;
	public ParticipantElements getParticipantAccess() {
		return pParticipant;
	}
	
	public ParserRule getParticipantRule() {
		return getParticipantAccess().getRule();
	}
	
	//GenericComponent:
	//	Entity | Actor | Component | ConfigurationItem | Role;
	public GenericComponentElements getGenericComponentAccess() {
		return pGenericComponent;
	}
	
	public ParserRule getGenericComponentRule() {
		return getGenericComponentAccess().getRule();
	}
	
	//GenericFunction:
	//	Function | Activity;
	public GenericFunctionElements getGenericFunctionAccess() {
		return pGenericFunction;
	}
	
	public ParserRule getGenericFunctionRule() {
		return getGenericFunctionAccess().getRule();
	}
	
	//Actor:
	//	keyword='actor' name=STRING;
	public ActorElements getActorAccess() {
		return pActor;
	}
	
	public ParserRule getActorRule() {
		return getActorAccess().getRule();
	}
	
	//Component:
	//	keyword='component' name=STRING nature=('unset' | 'behavior' | 'node')?;
	public ComponentElements getComponentAccess() {
		return pComponent;
	}
	
	public ParserRule getComponentRule() {
		return getComponentAccess().getRule();
	}
	
	//ConfigurationItem:
	//	keyword='configuration_item' name=STRING;
	public ConfigurationItemElements getConfigurationItemAccess() {
		return pConfigurationItem;
	}
	
	public ParserRule getConfigurationItemRule() {
		return getConfigurationItemAccess().getRule();
	}
	
	//Function:
	//	keyword='function' name=STRING;
	public FunctionElements getFunctionAccess() {
		return pFunction;
	}
	
	public ParserRule getFunctionRule() {
		return getFunctionAccess().getRule();
	}
	
	//Activity:
	//	keyword='activity' name=STRING;
	public ActivityElements getActivityAccess() {
		return pActivity;
	}
	
	public ParserRule getActivityRule() {
		return getActivityAccess().getRule();
	}
	
	//Entity:
	//	keyword='entity' name=STRING;
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}
	
	//Role:
	//	keyword='role' name=STRING;
	public RoleElements getRoleAccess() {
		return pRole;
	}
	
	public ParserRule getRoleRule() {
		return getRoleAccess().getRule();
	}
	
	//Message:
	//	SequenceMessageType | ArmTimerMessage | ParticipantDeactivation;
	public MessageElements getMessageAccess() {
		return pMessage;
	}
	
	public ParserRule getMessageRule() {
		return getMessageAccess().getRule();
	}
	
	//SequenceMessageType:
	//	(SequenceMessage | CreateMessage | DeleteMessage) return=ReturnMessage?;
	public SequenceMessageTypeElements getSequenceMessageTypeAccess() {
		return pSequenceMessageType;
	}
	
	public ParserRule getSequenceMessageTypeRule() {
		return getSequenceMessageTypeAccess().getRule();
	}
	
	//SequenceMessage:
	//	source=STRING '->' target=STRING execution='withExecution'? ':' name=STRING;
	public SequenceMessageElements getSequenceMessageAccess() {
		return pSequenceMessage;
	}
	
	public ParserRule getSequenceMessageRule() {
		return getSequenceMessageAccess().getRule();
	}
	
	//CreateMessage:
	//	source=STRING '->+' target=STRING ':' name=STRING;
	public CreateMessageElements getCreateMessageAccess() {
		return pCreateMessage;
	}
	
	public ParserRule getCreateMessageRule() {
		return getCreateMessageAccess().getRule();
	}
	
	//DeleteMessage:
	//	source=STRING '->x' target=STRING ':' name=STRING;
	public DeleteMessageElements getDeleteMessageAccess() {
		return pDeleteMessage;
	}
	
	public ParserRule getDeleteMessageRule() {
		return getDeleteMessageAccess().getRule();
	}
	
	//ReturnMessage:
	//	target=STRING '<--' source=STRING ':' name=STRING;
	public ReturnMessageElements getReturnMessageAccess() {
		return pReturnMessage;
	}
	
	public ParserRule getReturnMessageRule() {
		return getReturnMessageAccess().getRule();
	}
	
	//ArmTimerMessage:
	//	"->>" participant=STRING ':' name=STRING;
	public ArmTimerMessageElements getArmTimerMessageAccess() {
		return pArmTimerMessage;
	}
	
	public ParserRule getArmTimerMessageRule() {
		return getArmTimerMessageAccess().getRule();
	}
	
	//ParticipantDeactivation:
	//	keyword='deactivate' name=STRING;
	public ParticipantDeactivationElements getParticipantDeactivationAccess() {
		return pParticipantDeactivation;
	}
	
	public ParserRule getParticipantDeactivationRule() {
		return getParticipantDeactivationAccess().getRule();
	}
	
	//Reference:
	//	keyword='ref' 'over' timelines+=STRING+ name=STRING;
	public ReferenceElements getReferenceAccess() {
		return pReference;
	}
	
	public ParserRule getReferenceRule() {
		return getReferenceAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
